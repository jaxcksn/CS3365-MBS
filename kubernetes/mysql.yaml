# mysql-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.4
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "root"
            - name: MYSQL_DATABASE
              value: "mbs"
            - name: MYSQL_USER
              value: "user"
            - name: MYSQL_PASSWORD
              value: "CS3365_Team12"
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config

---
# mysql-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  clusterIP: None # For headless service if required for direct pod-to-pod communication
---
# mysql-initdb-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  init.sql: |
    # Used to initialize the database:
    CREATE DATABASE IF NOT EXISTS mbs;
    CREATE TABLE IF NOT EXISTS appInfo(  
      id int NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT 'Primary Key',
      app_version VARCHAR(255) COMMENT 'App Version',
      app_name VARCHAR(255) COMMENT 'App Name'
    );
    INSERT INTO appInfo (id, app_version, app_name) VALUES (1, '0.0.1', 'Movie Booking System');
---
# mysql-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
